# Ports
# Load balancer           = 3004
# Microservice instance 1 = 30041
# Microservice instance 2 = 30042
# Microservice instance 3 = 30043
# Microservice instance 4 = 30044
# Microservice instance 5 = 30045
# Database                = 30040

services:
  # base
  base_rooms:
    build:
      context: ./
      dockerfile: Dockerfile.node
    container_name: base_rooms
    environment:
      - SERVER_TYPE=http
      - HTTP_ROUTE_CREATE_ROOM={"method":"POST","url":"/dashboard/create-room","controller":"createRoomController"}
      - HTTP_ROUTE_GET_ROOMS={"method":"GET","url":"/get-rooms","controller":"getRoomsController"}
      - HTTP_ROUTE_ROOM_ACCESS={"method":"GET","url":"/room-access","controller":"roomAccessController"}
      - MYSQL_HOST=rooms_db
      - MYSQL_DATABASE=rooms
      - MYSQL_PORT=30040
      - MYSQL_CORS=*
    depends_on:
      - rooms_db
  # load balancer
  rooms_load-balancer:
    image: nginx:stable-alpine-perl
    container_name: rooms_load-balancer
    ports:
      - 3004:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - base_rooms
  # microservice instances
  rooms1:
    extends:
      service: base_rooms
    container_name: rooms1
    ports:
      - 30041:3000
  rooms2:
    extends:
      service: base_rooms
    container_name: rooms2
    ports:
      - 30042:3000
  rooms3:
    extends:
      service: base_rooms
    container_name: rooms3
    ports:
      - 30043:3000
  rooms4:
    extends:
      service: base_rooms
    container_name: rooms4
    ports:
      - 30044:3000
  rooms5:
    extends:
      service: base_rooms
    container_name: rooms5
    ports:
      - 30045:3000
  # database
  rooms_db:
    image: mysql:8.4
    container_name: rooms_db
    ports:
      - 30040:30040
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rooms
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_TCP_PORT: 30040
    volumes:
      - rooms_db_volumes:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
  rooms_db_volumes:
    driver: local
