services:
  # base
  base_api-gateway:
    build:
      context: ./
      dockerfile: Dockerfile.node
    container_name: api-gateway
    environment:
      - SERVER_TYPE=http
      - HTTP_ROUTE_SIGN_UP={"method":"POST","url":"/sign-up","controller":"signUpController"}
      - MYSQL_HOST=api-gateway_db
      - MYSQL_DATABASE=api-gateway
      - MYSQL_PORT=30001
      - MYSQL_CORS=http://localhost:3333
    depends_on:
      - api-gateway_db
  # load balancer
  api-gateway_load-balancer:
    image: nginx:stable-alpine-perl
    container_name: api-gateway_load-balancer
    ports:
      - 3000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - base_api-gateway
  # microservice instances
  api-gateway1:
    extends:
      service: base_api-gateway
    container_name: api-gateway1
    ports:
      - 3001:3000
  api-gateway2:
    extends:
      service: base_api-gateway
    container_name: api-gateway2
    ports:
      - 3002:3000
  api-gateway3:
    extends:
      service: base_api-gateway
    container_name: api-gateway3
    ports:
      - 3003:3000
  api-gateway4:
    extends:
      service: base_api-gateway
    container_name: api-gateway4
    ports:
      - 3004:3000
  api-gateway5:
    extends:
      service: base_api-gateway
    container_name: api-gateway5
    ports:
      - 3005:3000
  # db
  api-gateway_db:
    image: mysql:8.4
    container_name: api-gateway_db
    ports:
      - 30001:30001
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: api-gateway
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_TCP_PORT: 30001
    volumes:
      - api-gateway_db_volumes:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
  api-gateway_db_volumes:
    driver: local
