# Ports
# Load balancer           = 3002
# Microservice instance 1 = 30021
# Microservice instance 2 = 30022
# Microservice instance 3 = 30023
# Microservice instance 4 = 30024
# Microservice instance 5 = 30025
# Database                = 30020

services:
  # base
  base_api-gateway:
    build:
      context: ./
      dockerfile: Dockerfile.node
    container_name: api-gateway
    environment:
      - SERVER_TYPE=http
      - HTTP_ROUTE_SIGN_IN={"method":"POST","url":"/sign-in","controller":"signInController"}
      - HTTP_ROUTE_SIGN_UP={"method":"POST","url":"/sign-up","controller":"signUpController"}
      - HTTP_ROUTE_PROTECTED={"method":"POST","url":"/protected","controller":"protectedController"}
      - HTTP_ROUTE_LOGOUT={"method":"POST","url":"/logout","controller":"logoutController"}
      - HTTP_ROUTE_FETCH_ACCOUNT={"method":"POST","url":"/fetch-account","controller":"fetchAccountController"}
      - HTTP_ROUTE_CREATE_ROOM={"method":"POST","url":"/dashboard/create-room","controller":"createRoomController"}
      - HTTP_ROUTE_GET_ROOM={"method":"GET","url":"/get-rooms","controller":"getRoomsController"}
      - HTTP_ROUTE_ROOM_SIGN_IN={"method":"POST","url":"/room-sign-in","controller":"roomSignInController"}
      - HTTP_ROUTE_ROOM_PROTECTED={"method":"POST","url":"/room-protected","controller":"roomProtectedController"}
      - MYSQL_HOST=api-gateway_db
      - MYSQL_DATABASE=api-gateway
      - MYSQL_PORT=30020
      - MYSQL_CORS=*
    depends_on:
      - api-gateway_db
  # load balancer
  api-gateway_load-balancer:
    image: nginx:stable-alpine-perl
    container_name: api-gateway_load-balancer
    ports:
      - 3002:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - base_api-gateway
  # microservice instances
  api-gateway1:
    extends:
      service: base_api-gateway
    container_name: api-gateway1
    ports:
      - 30021:3000
  api-gateway2:
    extends:
      service: base_api-gateway
    container_name: api-gateway2
    ports:
      - 30022:3000
  api-gateway3:
    extends:
      service: base_api-gateway
    container_name: api-gateway3
    ports:
      - 30023:3000
  api-gateway4:
    extends:
      service: base_api-gateway
    container_name: api-gateway4
    ports:
      - 30024:3000
  api-gateway5:
    extends:
      service: base_api-gateway
    container_name: api-gateway5
    ports:
      - 30025:3000
  # database
  api-gateway_db:
    image: mysql:8.4
    container_name: api-gateway_db
    ports:
      - 30020:30020
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: api-gateway
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_TCP_PORT: 30020
    volumes:
      - api-gateway_db_volumes:/var/lib/mysql
volumes:
  api-gateway_db_volumes:
    driver: local
