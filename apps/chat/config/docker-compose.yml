# Ports
# Load balancer           = 3003
# Microservice instance 1 = 30031
# Microservice instance 2 = 30032
# Microservice instance 3 = 30033
# Microservice instance 4 = 30034
# Microservice instance 5 = 30035
# Database                = 30030
# Redis                   = 6379

services:
  # base
  base_chat:
    build:
      context: ./
      dockerfile: Dockerfile.node
    container_name: base_chat
    environment:
      - SERVER_TYPE=socket
      - SERVER_SOCKET_IO_CONTROLLER=socketIOController
      - MYSQL_HOST=chat_db
      - MYSQL_DATABASE=chat
      - MYSQL_PORT=30030
      - MYSQL_CORS=*
    depends_on:
      - chat_db
      - redis
  # load balancer
  chat_load-balancer:
    image: nginx:1.27.2-alpine-slim
    container_name: chat_load-balancer
    ports:
      - 3003:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - base_chat
  # microservices instances
  chat1:
    extends:
      service: base_chat
    container_name: chat1
    ports:
      - 30031:3000
  chat2:
    extends:
      service: base_chat
    container_name: chat2
    ports:
      - 30032:3000
  chat3:
    extends:
      service: base_chat
    container_name: chat3
    ports:
      - 30033:3000
  chat4:
    extends:
      service: base_chat
    container_name: chat4
    ports:
      - 30034:3000
  chat5:
    extends:
      service: base_chat
    container_name: chat5
    ports:
      - 30035:3000
  # database
  chat_db:
    image: mysql:8.4
    container_name: chat_db
    ports:
      - 30030:30030
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chat
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_TCP_PORT: 30030
    volumes:
      - chat_db_volumes:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  # redis
  redis:
    image: redis:8.0-M02-alpine
    ports:
      - 6379:6379
volumes:
  chat_db_volumes:
    driver: local
